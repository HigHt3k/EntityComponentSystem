<strings language="EN_US">
    <string id="0">PLAY</string>
    <string id="1">BUILD</string>
    <string id="2">OPTIONS</string>
    <string id="3">EXIT</string>
    <string id="4">MENU</string>
    <string id="5">SAVE</string>
    <string id="10">ENGLISH</string>
    <string id="11">GERMAN</string>
    <string id="12">GERMAN SIMPLE</string>
    <string id="13">FULLSCREEN</string>
    <string id="20">This is a sensor component. It measures specified parameters from a system.</string>
    <string id="21">A computer processes the different sensor inputs it receives.</string>
    <string id="22">Actuator components execute a command on the aircraft.</string>
    <string id="23">Voting components try to find a consensus of all signals. Out of control signals can be eliminated
        to a certain extent by using voters.
    </string>
    <string id="24">Dual Sensors act like an internal duplex system. There are 2 normal sensors generating data, which
        are compromised to a single output value. Dual Sensors have a lower probability of failure.
    </string>
    <string id="25">This is a sensor component from a different production.</string>
    <string id="26">A Computer from CPUCompany.</string>
    <string id="27">Actuator produced by ACTive.</string>
    <string id="30">VALIDATE</string>
    <string id="49">INFORMATION</string>
    <string id="50">GOAL</string>
    <string id="51">Safety Requirement:</string>
    <string id="52">Minimum Actuators:</string>
    <string id="53">Correct Inputs:</string>
    <string id="54">Failure Ratio:</string>
    <string id="55">Accepted OOC:</string>
    <string id="56">X Size of the grid:</string>
    <string id="57">Y Size of the grid:</string>
    <string id="58">TRY AGAIN</string>
    <string id="59">SAVE SCORE</string>
    <string id="60">BACK</string>
    <string id="61">SCORE</string>
    <string id="62">NEXT</string>
    <string id="63">Goal</string>
    <string id="64">Passive Failure</string>
    <string id="65">Out of Control Failure</string>
    <string id="800">Hello Tina, I'm Ingo Engineer and I will walk you through the basic steps! I hope you enjoy working with us. :)</string>
    <string id="801">Ok, let's start with a map of our factory, I installed it on your tablet, so you know how to navigate when you don't know where to go!</string>
    <string id="802">Good question! You can open it by clicking this symbol...</string>
    <string id="803">No, you only have access to certain areas! If you do your work well, you will get promoted and can access more areas, though!</string>
    <string id="805">Hi Ingo, nice to meet you! Yes, let's go, I'm happy to be here! :)</string>
    <string id="806">Okay, but how do I open the map?</string>
    <string id="807">Sounds good. Can I go everywhere?</string>
    <string id="808">Alright, let's get it!</string>
    <string id="900">There are some missing cables we need to fix, I think I could just take them from my build plan and set them up.</string>
    <string id="901">Right, you got it, Tina! Once you are done setting up the cables, you can verify your system using this button on your phone.</string>
    <string id="902">On your phone, you also have information regarding the system requirements. You can see the amount of actuators that need to be correctly working...</string>
    <string id="903">... as well as the safety categorization. For more information on this topic, go to level 0!</string>
    <string id="904">Generally, systems need to be set up in a way, that 2 types of failures only happen at a specified probability.</string>
    <string id="905">The 2 types are: Passive errors - those are errors that are detected by the system...</string>
    <string id="906">... and Out of Control errors, which are not detected and may lead to misbehaviour of components.</string>
    <string id="907">Your goal should always be to mitigate both of these failure types. If you want information about anything, there is also an application for that on your phone.</string>
    <string id="1000">Example Duplex system with two sensors, two cpus and one actuator.</string>
    <string id="10000">Tutorial 1: Connecting Cables</string>
    <string id="10001">Welcome to the game. In this tutorial series you are going to learn all the basics you need to
        start implementing your own systems.
    </string>
    <string id="10002">You are presented a game field where components need to be connected by using cables.</string>
    <string id="10003">Click a cable from the bottom panel and drag it between the components.</string>
    <string id="10004">If correctly connected, the component will now light up green.</string>
    <string id="20000">Tutorial 2: Connecting Cables</string>
    <string id="20001">You can also place cables around corners. Try to connect the components by using the red cable
        and rotating the in- and output of the cable using the right and middle mouse buttons. Advice: the input ports
        of the actuator component are located on the left side of the component.
    </string>
    <string id="30000">Tutorial 3: Connecting Cables</string>
    <string id="30001">It is also possible to connect different components to a single other component. Try using the
        red and blue cables to connect both sensors to the computer. You can switch the cable color that is being
        rotated by using the keyboard buttons 1-4. Advice: 1: red, 2: blue, 3: green, 4: yellow
    </string>
    <string id="40000">Tutorial 4: Placing Components</string>
    <string id="40001">Not only cables can be used to build or enhance your systems - you can also use new components!
        Try to replicate the previous levels' layout by using the 2 computers and connect all the components.
    </string>
    <string id="50000">Tutorial 5: Removing and Replacing</string>
    <string id="50001">By accident, someone placed a sensor component instead of a computer component. Remove the wrong
        component by using the right mouse button or directly replace it by using the correct component on the same
        tile. Connect all the components again.
    </string>
    <string id="60000">Duplex System 1</string>
    <string id="60001">The given system is not safe enough and might lead to major incidents due to exhausted cabin
        crew.
    </string>
    <string id="60002">Try to enhance this system to meet the major safety condition for the actuator.</string>
    <string id="70000">Multiple Actuators</string>
    <string id="70001">You have two sensors and two actuators that need to correctly work with a hazardous safety
        requirement.
    </string>
    <string id="70002">No actuator should fail in this scenario, i.e. no failed signals should be received. Actuators
        themselves are failsafe in this scenario.
    </string>
    <string id="80000">Duplex System 2</string>
    <string id="80001">In this scenario, you are given two sensors and one actuator. Computers and Actuators are
        failsafe, meaning they only fail when provided with too many failed signals.
    </string>
    <string id="90000">Triplex System</string>
    <string id="90001">You are given a sensor which needs at least to correct inputs to correctly work. Find a solution that solves this problem!</string>
    <string id="100000">Duplex Sensors</string>
    <string id="100001">You have multiple possibilities to solve this level. Try to find the most efficient one, which will provide you with the highest score!</string>
</strings>